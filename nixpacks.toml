[phases.setup]
nixPkgs = ["php82", "php82Packages.composer", "nodejs"]

[phases.install]
cmds = [
  "composer install --no-dev --optimize-autoloader",
  "chmod -R 775 storage bootstrap/cache",
  "chown -R www-data:www-data storage bootstrap/cache",
  "npm install"
]

[phases.build]
dependsOn = ["install"]
cmds = [
  "php artisan config:cache",
  "php artisan route:cache",
  "php artisan view:cache",
  "php artisan optimize",
  "npm run build"
]

[phases.release]
dependsOn = ["build"]
cmds = [
  "php artisan migrate --force"
]

[phases.start]
dependsOn = ["release"]
cmds = [
  # Jalankan Nginx dan PHP-FPM secara terpisah; tidak menggunakan `php artisan serve`
  # Gunakan Nginx sebagai web server (lihat konfigurasi di [staticAssets])
  # Jalankan PHP-FPM sebagai proses utama, contoh:
  "php-fpm -R -O -y /etc/php-fpm.conf"  # Contoh, sesuaikan path config PHP-FPM sesuai lingkungan
  # Jika ingin queue worker, jalankan di container/instance terpisah:
  # "php artisan queue:work --tries=3"
]

[staticAssets]
"nginx.template.conf" = '''
user www-data www-data;
worker_processes 5;
daemon off;

worker_rlimit_nofile 8192;

events {
  worker_connections 4096;
}

http {
  include $!{nginx}/conf/mime.types;
  index index.html index.htm index.php;

  default_type application/octet-stream;
  log_format main '$remote_addr - $remote_user [$time_local]  $status '
      '"$request" $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx-access.log;
  error_log /var/log/nginx-error.log;
  sendfile on;
  tcp_nopush on;
  server_names_hash_bucket_size 128;

  server {
    listen ${PORT};
    listen [::]:${PORT};
    server_name localhost;

    root /app/public;

    add_header X-Content-Type-Options "nosniff";

    client_max_body_size 35M;

    index index.php;

    charset utf-8;

    location / {
      try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ \.php$ {
      fastcgi_pass 127.0.0.1:9000;
      fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
      include $!{nginx}/conf/fastcgi_params;
      include $!{nginx}/conf/fastcgi.conf;
      fastcgi_param PHP_VALUE "upload_max_filesize=30M \n post_max_size=35M";
    }

    location ~ /\.(?!well-known).* {
      deny all;
    }
  }
}
'''
